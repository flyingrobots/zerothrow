# Docker Compose configuration for running CI tests locally
name: zerothrow-tests

services:
  # Unit tests on Node 22
  unit-tests-node22:
    container_name: zerothrow-tests-a-unit-node22
    image: node:22-alpine
    working_dir: /app
    volumes:
      - .:/source:ro
    environment:
      - CI=true
      - PREPUSH=true
      - NODE_ENV=test
      - PREPUSH=true
    command: >
      sh -c "
        cp -r /source/. /app/ &&
        corepack enable && corepack prepare pnpm@latest --activate &&
        pnpm install --frozen-lockfile --quiet &&
        pnpm exec vitest run --config vitest.prepush.config.ts --coverage
      "

  # Integration tests on Node 22
  integration-tests:
    container_name: zerothrow-tests-b-integration
    image: node:22-alpine
    working_dir: /app
    volumes:
      - .:/source:ro
    environment:
      - CI=true
      - PREPUSH=true
      - NODE_ENV=test
      - PREPUSH=true
    command: >
      sh -c "
        cp -r /source/. /app/ &&
        corepack enable && corepack prepare pnpm@latest --activate &&
        pnpm install --frozen-lockfile --quiet &&
        pnpm exec vitest run --config vitest.integration.prepush.config.ts
      "

  # TypeScript check
  typescript-check:
    container_name: zerothrow-tests-c-typescript
    image: node:22-alpine
    working_dir: /app
    volumes:
      - .:/source:ro
    environment:
      - CI=true
      - PREPUSH=true
    command: >
      sh -c "
        cp -r /source/* /app/ &&
        corepack enable && corepack prepare pnpm@latest --activate &&
        pnpm install --frozen-lockfile --quiet &&
        pnpm exec tsc --noEmit
      "

  # Lint check
  lint-check:
    container_name: zerothrow-tests-d-lint
    image: node:22-alpine
    working_dir: /app
    volumes:
      - .:/source:ro
    environment:
      - CI=true
      - PREPUSH=true
    command: >
      sh -c "
        cp -r /source/* /app/ &&
        corepack enable && corepack prepare pnpm@latest --activate &&
        pnpm install --frozen-lockfile --quiet &&
        pnpm run lint
      "

  # Build check
  build-check:
    container_name: zerothrow-tests-e-build
    image: node:22-alpine
    working_dir: /app
    volumes:
      - .:/source:ro
    environment:
      - CI=true
      - PREPUSH=true
    command: >
      sh -c "
        cp -r /source/* /app/ &&
        corepack enable && corepack prepare pnpm@latest --activate &&
        pnpm install --frozen-lockfile --quiet &&
        pnpm run build &&
        test -d dist
      "

  # Coverage check
  coverage-check:
    container_name: zerothrow-tests-f-coverage
    image: node:22-alpine
    working_dir: /app
    volumes:
      - .:/source:ro
    environment:
      - CI=true
      - PREPUSH=true
      - NODE_ENV=test
      - PREPUSH=true
    command: >
      sh -c "
        cp -r /source/. /app/ &&
        corepack enable && corepack prepare pnpm@latest --activate &&
        pnpm install --frozen-lockfile --quiet &&
        pnpm exec vitest run --config vitest.prepush.config.ts --coverage &&
        echo '' &&
        echo '📊 Checking coverage meets >90% threshold...' &&
        if [ -f coverage/coverage-summary.json ]; then
          node -e \"
            const fs = require('fs');
            const coverage = JSON.parse(fs.readFileSync('./coverage/coverage-summary.json', 'utf8'));
            const total = coverage.total;
            const metrics = ['lines', 'statements', 'functions', 'branches'];
            let failed = false;
            
            console.log('Coverage Summary:');
            metrics.forEach(metric => {
              const pct = total[metric].pct;
              const status = pct >= 90 ? '✅' : '❌';
              console.log(\\\`  \\\${status} \\\${metric}: \\\${pct}%\\\`);
              if (pct < 90) failed = true;
            });
            
            if (failed) {
              console.log('\\n❌ Coverage is below 90% threshold!');
              process.exit(1);
            } else {
              console.log('\\n✅ Coverage meets threshold!');
            }
          \"
        else
          echo '❌ Coverage summary file not found!' &&
          echo 'This usually means the tests failed to run properly.' &&
          exit 1
        fi
      "

networks:
  default:
    name: zerothrow-tests-network