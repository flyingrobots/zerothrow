name: CI

on:
  push:
    branches: [ 'fix/**', 'main' ]
  pull_request:
    branches: [ main ]

jobs:
  quality-checks:
    name: Quality Checks
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
    
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 8.15.4
        run_install: false

    - name: Install dependencies  
      run: pnpm install --frozen-lockfile

    - name: Run linter
      run: pnpm run lint

    - name: Build project
      run: pnpm run build

    - name: Check types
      run: cd packages/core && pnpm exec tsc --noEmit

  test-matrix:
    name: Tests (${{ matrix.os }} / Node ${{ matrix.node }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        node: ['20.x', '22.x']
      fail-fast: false

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node }}
    
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 8.15.4
        run_install: false

    - name: Install dependencies  
      run: pnpm install --frozen-lockfile

    - name: Run unit tests
      run: pnpm test

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.os }}-node${{ matrix.node }}
        path: |
          coverage/
          test-results/

  # integration-tests:
  #   name: Integration Tests
  #   runs-on: ubuntu-latest
    
  #   services:
  #     postgres:
  #       image: postgres:16-alpine
  #       env:
  #         POSTGRES_USER: testuser
  #         POSTGRES_PASSWORD: testpass
  #         POSTGRES_DB: testdb
  #       options: >-
  #         --health-cmd pg_isready
  #         --health-interval 10s
  #         --health-timeout 5s
  #         --health-retries 5
  #       ports:
  #         - 5432:5432

  #   steps:
  #   - uses: actions/checkout@v4

  #   - name: Setup Node.js
  #     uses: actions/setup-node@v4
  #     with:
  #       node-version: '20.x'
  #       cache: 'npm'

  #   - name: Install dependencies
  #     run: npm ci --workspaces --include-workspace-root

  #   - name: Run integration tests
  #     run: npm run test:integration

  # coverage:
  #   name: Coverage Report
  #   runs-on: ubuntu-latest
  #   needs: [quality-checks, test-matrix]
  #   
  #   steps:
  #   - uses: actions/checkout@v4

  #   - name: Setup Node.js
  #     uses: actions/setup-node@v4
  #     with:
  #       node-version: '20.x'
  #       cache: 'npm'

  #   - name: Install dependencies  
  #     run: npm ci --workspaces --include-workspace-root

  #   - name: Run tests with coverage
  #     run: npm test

  #   - name: Check coverage thresholds
  #     run: npx tsx scripts/ci/coverage-check.ts --threshold 90

  #   - name: Upload coverage to Codecov
  #     uses: codecov/codecov-action@v4
  #     with:
  #       files: ./coverage/lcov.info
  #       flags: unittests
  #       fail_ci_if_error: false

  all-checks-pass:
    name: CI Status
    runs-on: ubuntu-latest
    needs: [
      quality-checks, 
      test-matrix
      # integration-tests, 
      # coverage
      ]
    if: always()

    steps:
    - name: Check CI results
      run: |
        echo "üìä CI Results Summary:"
        echo "======================"
        echo "Quality Checks: ${{ needs.quality-checks.result }}"
        echo "Test Matrix: ${{ needs.test-matrix.result }}"
        echo "======================"
        
        # Show detailed failure info
        if [ "${{ needs.quality-checks.result }}" != "success" ]; then
          echo "‚ùå Quality Checks FAILED"
          echo "   Check the Quality Checks job for details on lint/build/type errors"
          echo "   Common issues: TypeScript errors, lint violations, build failures"
        else
          echo "‚úÖ Quality Checks PASSED"
        fi
        
        if [ "${{ needs.test-matrix.result }}" != "success" ]; then
          echo "‚ùå Test Matrix FAILED"
          echo "   Check the Tests jobs for details on test failures"
          echo "   Common issues: failing tests, dependency issues, Node version incompatibility"
        else
          echo "‚úÖ Test Matrix PASSED"
        fi
        
        echo "======================"
        
        # Fail if any job failed
        if [ "${{ needs.quality-checks.result }}" != "success" ] || \
           [ "${{ needs.test-matrix.result }}" != "success" ]; then
          echo "‚ùå CI FAILED - Check individual job logs above for actionable details"
          exit 1
        fi
        
        echo "‚úÖ All CI checks passed!"